{"ast":null,"code":"import React,{useContext}from\"react\";import{Context,checkGrid}from\"../Context\";import GridCard from\"./GridCard\";import{make2dArray}from\"../utils\";import{useTransition}from'react-spring';var GridView=function GridView(_ref){var history=_ref.history;var _useContext=useContext(Context),grid=_useContext.grid,setGrid=_useContext.setGrid,status=_useContext.status;var transition=useTransition(grid,function(item,i){return i;},{from:{transform:'scale(0)'},enter:{transform:'scale(1)'},leave:{transform:'scale(0)'},trail:80});var planeswalk=function planeswalk(i,_i){var newGrid=make2dArray();var a=1-i;var b=1-_i;grid.forEach(function(row,i){row.forEach(function(card,_i){var x=i+a;var y=_i+b;if(card&&x<3&&x>-1&&y<3&&y>-1)newGrid[x][y]=card;});});setGrid(checkGrid(newGrid));history.push('/info');};var mappedCards=grid?transition.map(function(_ref2,i){var item=_ref2.item,props=_ref2.props,key=_ref2.key;return item.map(function(card,_i){return React.createElement(GridCard,{key:key,styleProp:props,planeswalk:planeswalk,i:i,_i:_i,card:card,planeswalking:status==='Planeswalking...'?true:false});});}):null;return React.createElement(\"div\",{id:\"grid\",className:\"grid-container\"},mappedCards);};export default GridView;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/planechase/src/components/GridView.js"],"names":["React","useContext","Context","checkGrid","GridCard","make2dArray","useTransition","GridView","history","grid","setGrid","status","transition","item","i","from","transform","enter","leave","trail","planeswalk","_i","newGrid","a","b","forEach","row","card","x","y","push","mappedCards","map","props","key"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,OAAT,CAAkBC,SAAlB,KAAmC,YAAnC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,WAAT,KAA4B,UAA5B,CACA,OAAQC,aAAR,KAA4B,cAA5B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAe,IAAbC,CAAAA,OAAa,MAAbA,OAAa,iBACIP,UAAU,CAACC,OAAD,CADd,CACtBO,IADsB,aACtBA,IADsB,CAChBC,OADgB,aAChBA,OADgB,CACPC,MADO,aACPA,MADO,CAG9B,GAAMC,CAAAA,UAAU,CAAGN,aAAa,CAACG,IAAD,CAAO,SAACI,IAAD,CAAOC,CAAP,QAAaA,CAAAA,CAAb,EAAP,CAAuB,CACrDC,IAAI,CAAE,CAACC,SAAS,CAAE,UAAZ,CAD+C,CAErDC,KAAK,CAAE,CAACD,SAAS,CAAE,UAAZ,CAF8C,CAGrDE,KAAK,CAAE,CAACF,SAAS,CAAE,UAAZ,CAH8C,CAIrDG,KAAK,CAAE,EAJ8C,CAAvB,CAAhC,CAOA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACN,CAAD,CAAIO,EAAJ,CAAW,CAC5B,GAAIC,CAAAA,OAAO,CAAGjB,WAAW,EAAzB,CACA,GAAIkB,CAAAA,CAAC,CAAG,EAAIT,CAAZ,CACA,GAAIU,CAAAA,CAAC,CAAG,EAAIH,EAAZ,CACAZ,IAAI,CAACgB,OAAL,CAAa,SAACC,GAAD,CAAMZ,CAAN,CAAY,CACvBY,GAAG,CAACD,OAAJ,CAAY,SAACE,IAAD,CAAON,EAAP,CAAc,CACxB,GAAIO,CAAAA,CAAC,CAAGd,CAAC,CAAGS,CAAZ,CACA,GAAIM,CAAAA,CAAC,CAAGR,EAAE,CAAGG,CAAb,CACA,GAAIG,IAAI,EAAIC,CAAC,CAAG,CAAZ,EAAiBA,CAAC,CAAG,CAAC,CAAtB,EAA2BC,CAAC,CAAG,CAA/B,EAAoCA,CAAC,CAAG,CAAC,CAA7C,CAAgDP,OAAO,CAACM,CAAD,CAAP,CAAWC,CAAX,EAAgBF,IAAhB,CACjD,CAJD,EAKD,CAND,EAOAjB,OAAO,CAACP,SAAS,CAACmB,OAAD,CAAV,CAAP,CACAd,OAAO,CAACsB,IAAR,CAAa,OAAb,EACD,CAbD,CAeA,GAAMC,CAAAA,WAAW,CAAGtB,IAAI,CACpBG,UAAU,CAACoB,GAAX,CAAe,eAAqBlB,CAArB,KAAED,CAAAA,IAAF,OAAEA,IAAF,CAAQoB,KAAR,OAAQA,KAAR,CAAeC,GAAf,OAAeA,GAAf,OACbrB,CAAAA,IAAI,CAACmB,GAAL,CAAS,SAACL,IAAD,CAAON,EAAP,QACP,qBAAC,QAAD,EAAU,GAAG,CAAEa,GAAf,CAAoB,SAAS,CAAED,KAA/B,CAAsC,UAAU,CAAEb,UAAlD,CAA8D,CAAC,CAAEN,CAAjE,CAAoE,EAAE,CAAEO,EAAxE,CAA4E,IAAI,CAAEM,IAAlF,CAAwF,aAAa,CAAEhB,MAAM,GAAG,kBAAT,CAA8B,IAA9B,CAAqC,KAA5I,EADO,EAAT,CADa,EAAf,CADoB,CAMpB,IANJ,CAQA,MAAO,4BAAK,EAAE,CAAC,MAAR,CAAe,SAAS,CAAC,gBAAzB,EAA2CoB,WAA3C,CAAP,CACD,CAlCD,CAoCA,cAAexB,CAAAA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Context, checkGrid } from \"../Context\";\nimport GridCard from \"./GridCard\";\nimport { make2dArray } from \"../utils\";\nimport {useTransition} from 'react-spring';\n\nconst GridView = ({history}) => {\n  const { grid, setGrid, status } = useContext(Context);\n\n  const transition = useTransition(grid, (item, i) => i, {\n    from: {transform: 'scale(0)'},\n    enter: {transform: 'scale(1)'},\n    leave: {transform: 'scale(0)'},\n    trail: 80\n  })\n\n  const planeswalk = (i, _i) => {\n    let newGrid = make2dArray();\n    let a = 1 - i;\n    let b = 1 - _i;\n    grid.forEach((row, i) => {\n      row.forEach((card, _i) => {\n        let x = i + a;\n        let y = _i + b;\n        if (card && x < 3 && x > -1 && y < 3 && y > -1) newGrid[x][y] = card;\n      });\n    });\n    setGrid(checkGrid(newGrid));\n    history.push('/info')\n  };\n\n  const mappedCards = grid\n    ? transition.map(({item, props, key}, i) =>\n        item.map((card, _i) => (\n          <GridCard key={key} styleProp={props} planeswalk={planeswalk} i={i} _i={_i} card={card} planeswalking={status==='Planeswalking...' ? true : false}/>\n        ))\n      )\n    : null;\n\n  return <div id='grid' className=\"grid-container\">{mappedCards}</div>;\n};\n\nexport default GridView;\n"]},"metadata":{},"sourceType":"module"}