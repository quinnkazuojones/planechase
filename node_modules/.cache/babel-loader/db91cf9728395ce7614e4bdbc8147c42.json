{"ast":null,"code":"import _slicedToArray from \"/Users/quinnjones/Desktop/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/quinnjones/Desktop/planechase/src/components/DicePanel.js\";\nimport React, { useState } from 'react';\nimport { Context } from '../Context';\nimport dice from \"../assets/icons/dice.svg\";\nimport noresult from \"../assets/icons/null.svg\";\nimport chaos from \"../assets/icons/chaos.svg\";\nimport pw from \"../assets/icons/pw.svg\";\n\nconst DicePanel = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        view = _useState2[0],\n        setView = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        unknown = _useState4[0],\n        setUnknown = _useState4[1];\n\n  const roll = () => {\n    setUnknown(null);\n    const random = Math.floor(Math.random() * Math.floor(6)) + 1;\n    setView(random === 1 ? chaos : random === 6 ? pw : noresult);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"dice-panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: roll,\n    className: \"dice-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: dice,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"results-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: view,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n};\n\nexport default DicePanel;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/components/DicePanel.js"],"names":["React","useState","Context","DicePanel","view","setView","unknown","setUnknown","roll","random","Math","floor","chaos","pw","noresult","dice"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,YAAxB;;;;;;AAMA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACIF,QAAQ,EADZ;AAAA;AAAA,QACbG,IADa;AAAA,QACPC,OADO;;AAAA,qBAEUJ,QAAQ,EAFlB;AAAA;AAAA,QAEbK,OAFa;AAAA,QAEJC,UAFI;;AAIpB,QAAMC,IAAI,GAAG,MAAM;AACfD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBC,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B,IAA4C,CAA3D;AACAN,IAAAA,OAAO,CAACI,MAAM,KAAK,CAAX,GAAeG,KAAf,GAAuBH,MAAM,KAAK,CAAX,GAAeI,EAAf,GAAoBC,QAA5C,CAAP;AACH,GAJD;;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,OAAO,EAAEN,IAAd;AAAoB,IAAA,SAAS,EAAC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEO,IAAV;AAAgB,IAAA,GAAG,EAAC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEX,IAAV;AAAgB,IAAA,GAAG,EAAC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ;AAUH,CApBD;;AAsBA,eAAeD,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Context } from '../Context';\nimport dice from '../assets/icons/dice.svg';\nimport noresult from '../assets/icons/null.svg';\nimport chaos from '../assets/icons/chaos.svg';\nimport pw from '../assets/icons/pw.svg';\n\nconst DicePanel = () => {\n    const [view, setView] = useState();\n    const [unknown, setUnknown] = useState();\n\n    const roll = () => {\n        setUnknown(null);\n        const random = Math.floor(Math.random() * Math.floor(6)) + 1;\n        setView(random === 1 ? chaos : random === 6 ? pw : noresult);\n    }\n\n    return ( \n        <div className='dice-panel'>\n            <div onClick={roll} className=\"dice-container\">\n                <img src={dice} alt=\"\"/>\n            </div>\n            <div className=\"results-container\">\n                <img src={view} alt=\"\"/>\n            </div>\n        </div>\n     );\n}\n \nexport default DicePanel;"]},"metadata":{},"sourceType":"module"}