{"ast":null,"code":"var _jsxFileName = \"/Users/quinnjones/Desktop/planechase/src/components/GridCard.js\";\nimport React from \"react\";\n\nconst GridCard = ({\n  card,\n  i,\n  _i,\n  planeswalk,\n  planeswalking,\n  id\n}) => {\n  const src = card ? card.img : \"back.png\";\n  const selectable = !planeswalking ? \"\" : !card && (i === 0 && _i === 0 || i === 0 && _i === 2 || i === 2 && _i === 0 || i === 2 && _i === 2) || i === 0 && _i === 1 || i === 1 && _i === 0 || i === 1 && _i === 2 || i === 2 && _i === 1 ? \"selectable\" : \"not-selectable\";\n\n  const transform = e => {\n    let clicked = e.target.getBoundingClientRect();\n    const clickedX = clicked.x + clicked.width / 2;\n    const clickedY = clicked.y + clicked.height / 2;\n    let center = document.getElementById('center').getBoundingClientRect();\n    const centerX = center.x + center.width / 2;\n    const centerY = center.y + center.height / 2;\n    const X = clickedX - centerX;\n    const Y = clickedY - centerY;\n    document.getElementById('grid').style.transform = `translate(${-X}px, ${-Y}px)`;\n    console.log(e.target.parentNode);\n  };\n\n  return React.createElement(\"div\", {\n    id: id\n    /* onClick={() => planeswalk(i, _i)} */\n    ,\n    onClick: transform,\n    className: `grid-card ${card ? \"\" : \"no-border\"} ${selectable}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"img-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require(`../assets/images/${src}`),\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), card ? React.createElement(\"div\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, card.name)) : null);\n};\n\nexport default GridCard;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/components/GridCard.js"],"names":["React","GridCard","card","i","_i","planeswalk","planeswalking","id","src","img","selectable","transform","e","clicked","target","getBoundingClientRect","clickedX","x","width","clickedY","y","height","center","document","getElementById","centerX","centerY","X","Y","style","console","log","parentNode","require","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,CAAR;AAAWC,EAAAA,EAAX;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA,aAA3B;AAA0CC,EAAAA;AAA1C,CAAD,KAAoD;AACnE,QAAMC,GAAG,GAAGN,IAAI,GAAGA,IAAI,CAACO,GAAR,GAAc,UAA9B;AAEA,QAAMC,UAAU,GAAG,CAACJ,aAAD,GACf,EADe,GAEd,CAACJ,IAAD,KACGC,CAAC,KAAK,CAAN,IAAWC,EAAE,KAAK,CAAnB,IACED,CAAC,KAAK,CAAN,IAAWC,EAAE,KAAK,CADpB,IAEED,CAAC,KAAK,CAAN,IAAWC,EAAE,KAAK,CAFpB,IAGED,CAAC,KAAK,CAAN,IAAWC,EAAE,KAAK,CAJtB,CAAD,IAKCD,CAAC,KAAK,CAAN,IAAWC,EAAE,KAAK,CALnB,IAMCD,CAAC,KAAK,CAAN,IAAWC,EAAE,KAAK,CANnB,IAOCD,CAAC,KAAK,CAAN,IAAWC,EAAE,KAAK,CAPnB,IAQCD,CAAC,KAAK,CAAN,IAAWC,EAAE,KAAK,CARnB,GASA,YATA,GAUA,gBAZJ;;AAcE,QAAMO,SAAS,GAAGC,CAAC,IAAI;AACnB,QAAIC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASC,qBAAT,EAAd;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACI,CAAR,GAAaJ,OAAO,CAACK,KAAR,GAAgB,CAA9C;AACA,UAAMC,QAAQ,GAAGN,OAAO,CAACO,CAAR,GAAaP,OAAO,CAACQ,MAAR,GAAiB,CAA/C;AACA,QAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCT,qBAAlC,EAAb;AACA,UAAMU,OAAO,GAAGH,MAAM,CAACL,CAAP,GAAYK,MAAM,CAACJ,KAAP,GAAe,CAA3C;AACA,UAAMQ,OAAO,GAAGJ,MAAM,CAACF,CAAP,GAAYE,MAAM,CAACD,MAAP,GAAgB,CAA5C;AACA,UAAMM,CAAC,GAAGX,QAAQ,GAAGS,OAArB;AACA,UAAMG,CAAC,GAAGT,QAAQ,GAAGO,OAArB;AACAH,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCK,KAAhC,CAAsClB,SAAtC,GAAiD,aAAY,CAACgB,CAAE,OAAM,CAACC,CAAE,KAAzE;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYnB,CAAC,CAACE,MAAF,CAASkB,UAArB;AACH,GAXD;;AAaF,SACE;AAAK,IAAA,EAAE,EAAEzB;AACT;AADA;AAEE,IAAA,OAAO,EAAEI,SAFX;AAGE,IAAA,SAAS,EAAG,aAAYT,IAAI,GAAG,EAAH,GAAQ,WAAY,IAAGQ,UAAW,EAHhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEuB,OAAO,CAAE,oBAAmBzB,GAAI,EAAzB,CAAjB;AAA8C,IAAA,GAAG,EAAC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAQGN,IAAI,GACH;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACgC,IAAT,CADF,CADG,GAID,IAZN,CADF;AAgBD,CA9CD;;AAgDA,eAAejC,QAAf","sourcesContent":["import React from \"react\";\n\nconst GridCard = ({ card, i, _i, planeswalk, planeswalking, id }) => {\n  const src = card ? card.img : \"back.png\";\n\n  const selectable = !planeswalking\n    ? \"\"\n    : (!card &&\n        ((i === 0 && _i === 0) ||\n          (i === 0 && _i === 2) ||\n          (i === 2 && _i === 0) ||\n          (i === 2 && _i === 2))) ||\n      (i === 0 && _i === 1) ||\n      (i === 1 && _i === 0) ||\n      (i === 1 && _i === 2) ||\n      (i === 2 && _i === 1)\n    ? \"selectable\"\n    : \"not-selectable\";\n    \n    const transform = e => {\n        let clicked = e.target.getBoundingClientRect();\n        const clickedX = clicked.x + (clicked.width / 2);\n        const clickedY = clicked.y + (clicked.height / 2);\n        let center = document.getElementById('center').getBoundingClientRect();\n        const centerX = center.x + (center.width / 2);\n        const centerY = center.y + (center.height / 2);\n        const X = clickedX - centerX;\n        const Y = clickedY - centerY;\n        document.getElementById('grid').style.transform=`translate(${-X}px, ${-Y}px)`;\n        console.log(e.target.parentNode);\n    }\n\n  return (\n    <div id={id}\n    /* onClick={() => planeswalk(i, _i)} */\n      onClick={transform}\n      className={`grid-card ${card ? \"\" : \"no-border\"} ${selectable}`}\n    >\n      <div className=\"img-container\">\n        <img src={require(`../assets/images/${src}`)} alt=\"\" />\n      </div>\n      {card ? (\n        <div className=\"name\">\n          <p>{card.name}</p>\n        </div>\n      ) : null}\n    </div>\n  )\n};\n\nexport default GridCard;\n"]},"metadata":{},"sourceType":"module"}