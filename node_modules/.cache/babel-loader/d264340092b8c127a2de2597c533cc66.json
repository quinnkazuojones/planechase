{"ast":null,"code":"var _jsxFileName = \"/Users/quinnjones/Desktop/planechase/src/components/GridView.js\";\nimport React, { useContext } from \"react\";\nimport { Context, checkGrid } from \"../Context\";\nimport GridCard from \"./GridCard\";\nimport { make2dArray } from \"../utils\";\nimport { useTransition } from 'react-spring';\n\nconst GridView = () => {\n  const _useContext = useContext(Context),\n        grid = _useContext.grid,\n        setGrid = _useContext.setGrid,\n        status = _useContext.status;\n\n  const transition = useTransition(grid, (item, i) => i, {\n    from: {\n      transform: 'scale(0)'\n    },\n    enter: {\n      transform: 'scale(1)'\n    },\n    leave: {\n      transform: 'scale(0)'\n    },\n    trail: 80\n  });\n\n  const planeswalk = (i, _i) => {\n    let newGrid = make2dArray();\n    let a = 1 - i;\n    let b = 1 - _i;\n    grid.forEach((row, i) => {\n      row.forEach((card, _i) => {\n        let x = i + a;\n        let y = _i + b;\n        if (card && x < 3 && x > -1 && y < 3 && y > -1) newGrid[x][y] = card;\n      });\n    });\n    setGrid(checkGrid(newGrid));\n  };\n\n  const mappedCards = grid ? transition.map(({\n    item,\n    props,\n    key\n  }, i) => item.map((card, _i) => React.createElement(GridCard, {\n    key: key,\n    styleProp: props,\n    planeswalk: planeswalk,\n    i: i,\n    _i: _i,\n    card: card,\n    planeswalking: status === 'Planeswalking...' ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))) : null;\n  return React.createElement(\"div\", {\n    id: \"grid\",\n    className: \"grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, mappedCards);\n};\n\nexport default GridView;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/components/GridView.js"],"names":["React","useContext","Context","checkGrid","GridCard","make2dArray","useTransition","GridView","grid","setGrid","status","transition","item","i","from","transform","enter","leave","trail","planeswalk","_i","newGrid","a","b","forEach","row","card","x","y","mappedCards","map","props","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,YAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAAQC,aAAR,QAA4B,cAA5B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,sBACaN,UAAU,CAACC,OAAD,CADvB;AAAA,QACbM,IADa,eACbA,IADa;AAAA,QACPC,OADO,eACPA,OADO;AAAA,QACEC,MADF,eACEA,MADF;;AAGrB,QAAMC,UAAU,GAAGL,aAAa,CAACE,IAAD,EAAO,CAACI,IAAD,EAAOC,CAAP,KAAaA,CAApB,EAAuB;AACrDC,IAAAA,IAAI,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAD+C;AAErDC,IAAAA,KAAK,EAAE;AAACD,MAAAA,SAAS,EAAE;AAAZ,KAF8C;AAGrDE,IAAAA,KAAK,EAAE;AAACF,MAAAA,SAAS,EAAE;AAAZ,KAH8C;AAIrDG,IAAAA,KAAK,EAAE;AAJ8C,GAAvB,CAAhC;;AAOA,QAAMC,UAAU,GAAG,CAACN,CAAD,EAAIO,EAAJ,KAAW;AAC5B,QAAIC,OAAO,GAAGhB,WAAW,EAAzB;AACA,QAAIiB,CAAC,GAAG,IAAIT,CAAZ;AACA,QAAIU,CAAC,GAAG,IAAIH,EAAZ;AACAZ,IAAAA,IAAI,CAACgB,OAAL,CAAa,CAACC,GAAD,EAAMZ,CAAN,KAAY;AACvBY,MAAAA,GAAG,CAACD,OAAJ,CAAY,CAACE,IAAD,EAAON,EAAP,KAAc;AACxB,YAAIO,CAAC,GAAGd,CAAC,GAAGS,CAAZ;AACA,YAAIM,CAAC,GAAGR,EAAE,GAAGG,CAAb;AACA,YAAIG,IAAI,IAAIC,CAAC,GAAG,CAAZ,IAAiBA,CAAC,GAAG,CAAC,CAAtB,IAA2BC,CAAC,GAAG,CAA/B,IAAoCA,CAAC,GAAG,CAAC,CAA7C,EAAgDP,OAAO,CAACM,CAAD,CAAP,CAAWC,CAAX,IAAgBF,IAAhB;AACjD,OAJD;AAKD,KAND;AAOAjB,IAAAA,OAAO,CAACN,SAAS,CAACkB,OAAD,CAAV,CAAP;AACD,GAZD;;AAcA,QAAMQ,WAAW,GAAGrB,IAAI,GACpBG,UAAU,CAACmB,GAAX,CAAe,CAAC;AAAClB,IAAAA,IAAD;AAAOmB,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAD,EAAqBnB,CAArB,KACbD,IAAI,CAACkB,GAAL,CAAS,CAACJ,IAAD,EAAON,EAAP,KACP,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEY,GAAf;AAAoB,IAAA,SAAS,EAAED,KAA/B;AAAsC,IAAA,UAAU,EAAEZ,UAAlD;AAA8D,IAAA,CAAC,EAAEN,CAAjE;AAAoE,IAAA,EAAE,EAAEO,EAAxE;AAA4E,IAAA,IAAI,EAAEM,IAAlF;AAAwF,IAAA,aAAa,EAAEhB,MAAM,KAAG,kBAAT,GAA8B,IAA9B,GAAqC,KAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADoB,GAMpB,IANJ;AAQA,SAAO;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,SAAS,EAAC,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CmB,WAA3C,CAAP;AACD,CAjCD;;AAmCA,eAAetB,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Context, checkGrid } from \"../Context\";\nimport GridCard from \"./GridCard\";\nimport { make2dArray } from \"../utils\";\nimport {useTransition} from 'react-spring';\n\nconst GridView = () => {\n  const { grid, setGrid, status } = useContext(Context);\n\n  const transition = useTransition(grid, (item, i) => i, {\n    from: {transform: 'scale(0)'},\n    enter: {transform: 'scale(1)'},\n    leave: {transform: 'scale(0)'},\n    trail: 80\n  })\n\n  const planeswalk = (i, _i) => {\n    let newGrid = make2dArray();\n    let a = 1 - i;\n    let b = 1 - _i;\n    grid.forEach((row, i) => {\n      row.forEach((card, _i) => {\n        let x = i + a;\n        let y = _i + b;\n        if (card && x < 3 && x > -1 && y < 3 && y > -1) newGrid[x][y] = card;\n      });\n    });\n    setGrid(checkGrid(newGrid));\n  };\n\n  const mappedCards = grid\n    ? transition.map(({item, props, key}, i) =>\n        item.map((card, _i) => (\n          <GridCard key={key} styleProp={props} planeswalk={planeswalk} i={i} _i={_i} card={card} planeswalking={status==='Planeswalking...' ? true : false}/>\n        ))\n      )\n    : null;\n\n  return <div id='grid' className=\"grid-container\">{mappedCards}</div>;\n};\n\nexport default GridView;\n"]},"metadata":{},"sourceType":"module"}