{"ast":null,"code":"import _slicedToArray from \"/Users/quinnjones/Desktop/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/quinnjones/Desktop/planechase/src/components/DicePanel.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport dice from \"../assets/icons/dice.svg\";\nimport noresult from \"../assets/icons/null.svg\";\nimport chaos from \"../assets/icons/chaos.svg\";\nimport pw from \"../assets/icons/pw.svg\";\nimport useKeyPress from '../hooks/useKeyPress';\n\nconst DicePanel = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        view = _useState2[0],\n        setView = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        result = _useState4[0],\n        setResult = _useState4[1];\n\n  const _useContext = useContext(Context),\n        status = _useContext.status,\n        setStatus = _useContext.setStatus;\n\n  useKeyPress(key => {\n    if (key === 'Enter') {\n      roll();\n    }\n  });\n\n  const roll = () => {\n    if (status === constants.SETTING_UP) return;\n    let count = 0;\n    let num = 1;\n    const shuffle = setInterval(() => {\n      setView(num === 1 ? chaos : num === 2 ? pw : noresult);\n      count++;\n      num++;\n      if (num === 4) num = 1;\n\n      if (count === 12) {\n        clearInterval(shuffle);\n        const random = Math.floor(Math.random() * Math.floor(6)) + 1;\n        setView(random === 1 ? chaos : random === 2 ? pw : noresult);\n        setResult(random === 1 ? chaos : random === 2 ? pw : noresult);\n      }\n    }, 70);\n  };\n\n  useEffect(() => {\n    if (result === pw) setStatus(constants.PLANESWALKING);\n    if (result === chaos) setStatus(constants.CHAOS);\n  }, [result]);\n  return React.createElement(\"div\", {\n    className: 'dice-panel ' + (status === constants.SETTING_UP ? 'disabled' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: roll,\n    className: \"dice-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: dice,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"results-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      width: view === chaos ? '60px' : view === pw ? '40px' : '50px'\n    },\n    src: view,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));\n};\n\nexport default DicePanel;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/components/DicePanel.js"],"names":["React","useState","useEffect","useContext","Context","useKeyPress","DicePanel","view","setView","result","setResult","status","setStatus","key","roll","constants","SETTING_UP","count","num","shuffle","setInterval","chaos","pw","noresult","clearInterval","random","Math","floor","PLANESWALKING","CHAOS","dice","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport dice from \"../assets/icons/dice.svg\";\nimport noresult from \"../assets/icons/null.svg\";\nimport chaos from \"../assets/icons/chaos.svg\";\nimport pw from \"../assets/icons/pw.svg\";\nimport useKeyPress from '../hooks/useKeyPress';\n\nconst DicePanel = () => {\n  const [view, setView] = useState();\n  const [result, setResult] = useState();\n  const {status, setStatus} = useContext(Context);\n\n  useKeyPress(key => {\n    if(key === 'Enter'){\n      roll();\n    }\n  })\n\n  const roll = () => {\n    if(status===constants.SETTING_UP) return;\n    let count = 0;\n    let num = 1;\n\n    const shuffle = setInterval(() => {\n      setView(num === 1 ? chaos : num === 2 ? pw : noresult);\n      count++;\n      num++;\n      if(num === 4) num = 1;\n      if(count === 12){ \n          clearInterval(shuffle);\n          const random = Math.floor(Math.random() * Math.floor(6)) + 1;\n          setView(random === 1 ? chaos : random === 2 ? pw : noresult);\n          setResult(random === 1 ? chaos : random === 2 ? pw : noresult);\n        }\n    }, 70);\n  };\n\n  useEffect(() => {\n    if(result === pw) setStatus(constants.PLANESWALKING);\n    if(result === chaos) setStatus(constants.CHAOS);\n  }, [result])\n\n  return (\n    <div className={'dice-panel ' + (status===constants.SETTING_UP ? 'disabled' : '')}>\n      <div onClick={roll} className=\"dice-container\">\n        <img src={dice} alt=\"\" />\n      </div>\n      <div className=\"results-container\">\n        <img style={{width: view === chaos ? '60px' : view === pw ? '40px' : '50px'}} src={view} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DicePanel;\n"]},"metadata":{},"sourceType":"module"}