{"ast":null,"code":"export const shuffle = array => {\n  let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\nexport const make2dArray = () => {\n  return [[null, null, null], [null, null, null], [null, null, null]];\n};\nexport const checkGrid = grid => {\n  let newGrid = [...grid];\n  grid.forEach((row, i) => {\n    row.forEach((card, _i) => {\n      if (i === 0 && _i === 1 || i === 1 && _i === 0 || i === 1 && _i === 1 || i === 1 && _i === 2 || i === 2 && _i === 1) {\n        if (!newGrid[i][_i]) {\n          newGrid[i][_i] = getCard();\n        }\n      }\n    });\n  });\n  return newGrid;\n};","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/utils.js"],"names":["shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","make2dArray","checkGrid","grid","newGrid","forEach","row","i","card","_i","getCard"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAGC,KAAK,IAAI;AAC5B,MAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MACEC,cADF;AAAA,MAEEC,WAFF;;AAGA,SAAO,MAAMH,YAAb,EAA2B;AACzBG,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB;AACAE,IAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,IAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AACD,SAAOH,KAAP;AACD,CAZI;AAcP,OAAO,MAAMQ,WAAW,GAAG,MAAM;AAC7B,SAAO,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,EAAqB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAArB,EAAyC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAzC,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU;AACjC,MAAIC,OAAO,GAAG,CAAC,GAAGD,IAAJ,CAAd;AAEAA,EAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,GAAD,EAAMC,CAAN,KAAY;AACvBD,IAAAA,GAAG,CAACD,OAAJ,CAAY,CAACG,IAAD,EAAOC,EAAP,KAAc;AACxB,UACGF,CAAC,KAAK,CAAN,IAAWE,EAAE,KAAK,CAAnB,IACCF,CAAC,KAAK,CAAN,IAAWE,EAAE,KAAK,CADnB,IAECF,CAAC,KAAK,CAAN,IAAWE,EAAE,KAAK,CAFnB,IAGCF,CAAC,KAAK,CAAN,IAAWE,EAAE,KAAK,CAHnB,IAICF,CAAC,KAAK,CAAN,IAAWE,EAAE,KAAK,CALrB,EAME;AACA,YAAI,CAACL,OAAO,CAACG,CAAD,CAAP,CAAWE,EAAX,CAAL,EAAqB;AACnBL,UAAAA,OAAO,CAACG,CAAD,CAAP,CAAWE,EAAX,IAAiBC,OAAO,EAAxB;AACD;AACF;AACF,KAZD;AAaD,GAdD;AAeA,SAAON,OAAP;AACD,CAnBM","sourcesContent":["export const shuffle = array => {\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\nexport const make2dArray = () => {\n    return [[null, null, null], [null, null, null], [null, null, null]];\n}\n\nexport const checkGrid = (grid) => {\n  let newGrid = [...grid];\n\n  grid.forEach((row, i) => {\n    row.forEach((card, _i) => {\n      if (\n        (i === 0 && _i === 1) ||\n        (i === 1 && _i === 0) ||\n        (i === 1 && _i === 1) ||\n        (i === 1 && _i === 2) ||\n        (i === 2 && _i === 1)\n      ) {\n        if (!newGrid[i][_i]) {\n          newGrid[i][_i] = getCard();\n        }\n      }\n    });\n  });\n  return newGrid;\n};"]},"metadata":{},"sourceType":"module"}