{"ast":null,"code":"import _slicedToArray from \"/Users/quinnjones/Desktop/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/quinnjones/Desktop/planechase/src/components/PlayerPanel.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Context } from \"../Context\";\nimport Player from \"./Player\";\nimport useMeasure from '../hooks/useMeasure';\nimport { animated, useSpring, config, useTransition } from 'react-spring';\nimport useMultiKeyPress from '../hooks/useMultiKeyPress';\n\nconst PlayerPanel = () => {\n  const _useContext = useContext(Context),\n        players = _useContext.players,\n        setPlayers = _useContext.setPlayers;\n\n  const _useMeasure = useMeasure(),\n        _useMeasure2 = _slicedToArray(_useMeasure, 2),\n        bind = _useMeasure2[0],\n        height = _useMeasure2[1].height;\n\n  useMultiKeyPress(keys => {\n    const pattern = /Digit/;\n\n    if (keys.some(key => pattern.test(key))) {\n      const playerNum = keys.find(key => pattern.test(key)).substr(5) - 1;\n\n      if (keys.includes('Equal')) {\n        let newPlayers = [...players];\n        newPlayers.forEach((player, i) => {\n          if (i === playerNum) player.health++;\n        });\n        setPlayers(newPlayers);\n      } else if (keys.includes('Minus')) {}\n    }\n\n    ;\n  });\n  const animation = useSpring({\n    height: height + 100,\n    config: config.default\n  });\n  const transition = useTransition(players, (player, i) => i, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    levae: {\n      opacity: 0\n    }\n  });\n  const mappedPlayers = players ? transition.map(({\n    props,\n    key,\n    item\n  }) => React.createElement(Player, {\n    styleProp: props,\n    key: key,\n    players: players,\n    setPlayers: setPlayers,\n    health: item.health,\n    name: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })) : null;\n  return React.createElement(animated.div, {\n    style: animation,\n    className: \"player-panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Players\")), React.createElement(\"div\", Object.assign({}, bind, {\n    className: \"player-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), players.length > 0 ? mappedPlayers : React.createElement(\"p\", {\n    className: \"no-players\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Add players...\")));\n};\n\nexport default PlayerPanel;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/components/PlayerPanel.js"],"names":["React","useContext","useEffect","Context","Player","useMeasure","animated","useSpring","config","useTransition","useMultiKeyPress","PlayerPanel","players","setPlayers","bind","height","keys","pattern","some","key","test","playerNum","find","substr","includes","newPlayers","forEach","player","i","health","animation","default","transition","from","opacity","enter","levae","mappedPlayers","map","props","item","name","length"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Context } from \"../Context\";\nimport Player from \"./Player\";\nimport useMeasure from '../hooks/useMeasure';\nimport {animated, useSpring, config, useTransition} from 'react-spring';\nimport useMultiKeyPress from '../hooks/useMultiKeyPress';\n\nconst PlayerPanel = () => {\n  const { players, setPlayers } = useContext(Context);\n  const [bind, {height}] = useMeasure();\n\n  useMultiKeyPress(keys => {\n    const pattern = /Digit/;\n    if(keys.some(key => pattern.test(key))){\n      const playerNum = keys.find(key => pattern.test(key)).substr(5) - 1;\n      if(keys.includes('Equal')){\n        let newPlayers = [...players];\n        newPlayers.forEach((player, i) => {\n            if(i === playerNum) player.health++;\n        });\n        setPlayers(newPlayers);\n      }\n      else if(keys.includes('Minus')){\n\n      }\n    };\n  })\n\n  const animation = useSpring({height: height + 100, config: config.default});\n  const transition = useTransition(players, (player, i) => i, {\n    from: {opacity: 0},\n    enter: {opacity: 1},\n    levae: {opacity: 0}\n  });\n\n  const mappedPlayers = players\n    ? transition.map(({props, key, item}) => (\n        <Player styleProp={props} key={key}\n          players={players}\n          setPlayers={setPlayers}\n          health={item.health}\n          name={item.name}\n        />\n      ))\n    : null;\n\n  return (\n    <animated.div style={animation} className=\"player-panel\">\n      <div className=\"header\">\n        <h1>Players</h1>\n      </div>\n        <div {...bind} className=\"player-container\">\n          {players.length > 0 ? (\n            mappedPlayers\n          ) : (\n            <p className=\"no-players\">Add players...</p>\n          )}\n        </div>\n    </animated.div>\n  );\n};\n\nexport default PlayerPanel;\n"]},"metadata":{},"sourceType":"module"}