{"ast":null,"code":"import _slicedToArray from \"/Users/quinnjones/Desktop/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/quinnjones/Desktop/planechase/src/Context.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { data } from \"./assets/cards\";\nexport const Context = createContext();\nlet cards = shuffle(data);\n\nconst ContextProvider = ({\n  children\n}) => {\n  const _useState = useState([{\n    name: \"Austin\",\n    health: 18\n  }, {\n    name: \"Ian\",\n    health: 23\n  }, {\n    name: \"Quinn\",\n    health: 12\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        players = _useState2[0],\n        setPlayers = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gridView = _useState4[0],\n        setGridView = _useState4[1];\n\n  const _useState5 = useState([[null, null, null], [null, null, null], [null, null, null]]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        grid = _useState6[0],\n        setGrid = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        current = _useState8[0],\n        setCurrent = _useState8[1];\n\n  useEffect(() => {\n    checkGrid();\n  }, []);\n  useEffect(() => {\n    if (grid) setCurrent(grid[1][1]);\n  }, [grid]);\n\n  const checkGrid = () => {\n    let newGrid = [...grid];\n    grid.forEach((row, i) => {\n      row.forEach((card, _i) => {\n        if (i === 0 && _i === 1 || i === 1 && _i === 0 || i === 1 && _i === 1 || i === 1 && _i === 2 || i === 2 && _i === 1) {\n          if (!newGrid[i][_i]) {\n            newGrid[i][_i] = getCard();\n          }\n        }\n      });\n    });\n    setGrid(newGrid);\n  };\n\n  const getCard = () => {\n    const card = cards[0];\n    cards = cards.slice(1, cards.length);\n    return card;\n  };\n\n  return React.createElement(Context.Provider, {\n    value: {\n      players,\n      setPlayers,\n      gridView,\n      setGridView,\n      grid,\n      current\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, children);\n};\n\nexport default ContextProvider;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/Context.js"],"names":["React","createContext","useState","useEffect","data","Context","cards","shuffle","ContextProvider","children","name","health","players","setPlayers","gridView","setGridView","grid","setGrid","current","setCurrent","checkGrid","newGrid","forEach","row","i","card","_i","getCard","slice","length"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { data } from \"./assets/cards\";\n\nexport const Context = createContext();\n\nlet cards = shuffle(data);\n\nconst ContextProvider = ({ children }) => {\n  const [players, setPlayers] = useState([\n    { name: \"Austin\", health: 18 },\n    { name: \"Ian\", health: 23 },\n    { name: \"Quinn\", health: 12 }\n  ]);\n  const [gridView, setGridView] = useState(true);\n  const [grid, setGrid] = useState([\n    [null, null, null],\n    [null, null, null],\n    [null, null, null]\n  ]);\n  const [current, setCurrent] = useState();\n\n  useEffect(() => {\n    checkGrid();\n  }, []);\n\n  useEffect(() => {\n    if (grid) setCurrent(grid[1][1]);\n  }, [grid]);\n\n  const checkGrid = () => {\n    let newGrid = [...grid];\n\n    grid.forEach((row, i) => {\n      row.forEach((card, _i) => {\n        if (\n          (i === 0 && _i === 1) ||\n          (i === 1 && _i === 0) ||\n          (i === 1 && _i === 1) ||\n          (i === 1 && _i === 2) ||\n          (i === 2 && _i === 1)\n        ) {\n          if (!newGrid[i][_i]) {\n            newGrid[i][_i] = getCard();\n          }\n        }\n      });\n    });\n    setGrid(newGrid);\n  };\n\n  const getCard = () => {\n    const card = cards[0];\n    cards = cards.slice(1, cards.length);\n    return card;\n  };\n\n  return (\n    <Context.Provider\n      value={{ players, setPlayers, gridView, setGridView, grid, current }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport default ContextProvider;\n"]},"metadata":{},"sourceType":"module"}