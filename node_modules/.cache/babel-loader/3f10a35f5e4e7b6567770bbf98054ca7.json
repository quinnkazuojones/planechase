{"ast":null,"code":"import _slicedToArray from \"/Users/quinnjones/Desktop/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/quinnjones/Desktop/planechase/src/Context.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { data } from \"./assets/cards\";\nexport const Context = createContext();\n\nconst shuffle = array => {\n  let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst ContextProvider = ({\n  children\n}) => {\n  const _useState = useState([{\n    name: \"Austin\",\n    health: 18\n  }, {\n    name: \"Ian\",\n    health: 23\n  }, {\n    name: \"Quinn\",\n    health: 12\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        players = _useState2[0],\n        setPlayers = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gridView = _useState4[0],\n        setGridView = _useState4[1];\n\n  const _useState5 = useState(shuffle(data)),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cards = _useState6[0],\n        setCards = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        grid = _useState8[0],\n        setGrid = _useState8[1];\n\n  useEffect(() => {\n    getCard();\n  }, []);\n\n  const getCard = () => {\n    const randomIndex = Math.floor(Math.random() * cards.length);\n  };\n\n  return React.createElement(Context.Provider, {\n    value: {\n      players,\n      setPlayers,\n      gridView,\n      setGridView,\n      cards,\n      setCards\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, children);\n};\n\nexport default ContextProvider;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/Context.js"],"names":["React","createContext","useState","useEffect","data","Context","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","ContextProvider","children","name","health","players","setPlayers","gridView","setGridView","cards","setCards","grid","setGrid","getCard"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,IAAT,QAAqB,gBAArB;AAEA,OAAO,MAAMC,OAAO,GAAGJ,aAAa,EAA7B;;AAEP,MAAMK,OAAO,GAAGC,KAAK,IAAI;AACvB,MAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MACEC,cADF;AAAA,MAEEC,WAFF;;AAGA,SAAO,MAAMH,YAAb,EAA2B;AACzBG,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB;AACAE,IAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,IAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AACD,SAAOH,KAAP;AACD,CAZD;;AAcA,MAAMQ,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACVd,QAAQ,CAAC,CACrC;AAAEe,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,MAAM,EAAE;AAA1B,GADqC,EAErC;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAFqC,EAGrC;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAHqC,CAAD,CADE;AAAA;AAAA,QACjCC,OADiC;AAAA,QACxBC,UADwB;;AAAA,qBAMRlB,QAAQ,CAAC,IAAD,CANA;AAAA;AAAA,QAMjCmB,QANiC;AAAA,QAMvBC,WANuB;;AAAA,qBAOdpB,QAAQ,CAACI,OAAO,CAACF,IAAD,CAAR,CAPM;AAAA;AAAA,QAOjCmB,KAPiC;AAAA,QAO1BC,QAP0B;;AAAA,qBAQhBtB,QAAQ,EARQ;AAAA;AAAA,QAQjCuB,IARiC;AAAA,QAQ3BC,OAR2B;;AAUxCvB,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,MAAM;AACpB,UAAMhB,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBS,KAAK,CAACd,MAAjC,CAApB;AACD,GAFD;;AAIA,SACE,oBAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AAAEU,MAAAA,OAAF;AAAWC,MAAAA,UAAX;AAAuBC,MAAAA,QAAvB;AAAiCC,MAAAA,WAAjC;AAA8CC,MAAAA,KAA9C;AAAqDC,MAAAA;AAArD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGR,QAHH,CADF;AAOD,CAzBD;;AA2BA,eAAeD,eAAf","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { data } from \"./assets/cards\";\n\nexport const Context = createContext();\n\nconst shuffle = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\n\nconst ContextProvider = ({ children }) => {\n  const [players, setPlayers] = useState([\n    { name: \"Austin\", health: 18 },\n    { name: \"Ian\", health: 23 },\n    { name: \"Quinn\", health: 12 }\n  ]);\n  const [gridView, setGridView] = useState(true);\n  const [cards, setCards] = useState(shuffle(data));\n  const [grid, setGrid] = useState();\n\n  useEffect(() => {\n    getCard();\n  }, []);\n\n  const getCard = () => {\n    const randomIndex = Math.floor(Math.random() * cards.length);\n  };\n\n  return (\n    <Context.Provider\n      value={{ players, setPlayers, gridView, setGridView, cards, setCards }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport default ContextProvider;\n"]},"metadata":{},"sourceType":"module"}