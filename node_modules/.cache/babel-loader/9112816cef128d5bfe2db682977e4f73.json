{"ast":null,"code":"var _jsxFileName = \"/Users/quinnjones/Desktop/planechase/src/components/HelpView.js\";\nimport React from \"react\";\nimport { Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport { useTransition, animated, config, useSpring } from \"react-spring\";\n\nconst HelpView = () => {\n  const location = useLocation();\n  const pathname = location.pathname;\n  const transitions = useTransition(location, location => location.pathname, {\n    from: {\n      opacity: 0,\n      transform: \"translate3d(100%,0,0)\"\n    },\n    enter: {\n      opacity: 1,\n      transform: \"translate3d(0%,0,0)\"\n    },\n    leave: {\n      opacity: 0,\n      transform: \"translate3d(-50%,0,0)\"\n    },\n    config: config.default\n  });\n  const animation = useSpring({\n    from: {\n      opacity: 0\n    },\n    opacity: 1,\n    config: config.default\n  });\n  return React.createElement(animated.div, {\n    style: animation,\n    className: \"help-panel-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"help-panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Help\"), React.createElement(\"div\", {\n    className: \"switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/help/overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: pathname === \"/help/overview\" ? \"\" : \"faded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Overview\")), React.createElement(Link, {\n    to: \"/help/controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: pathname === \"/help/controls\" ? \"\" : \"faded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Controls\")), React.createElement(Link, {\n    to: \"/help/creator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: pathname === \"/help/creator\" ? \"\" : \"faded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Creator\"))), React.createElement(\"div\", {\n    className: \"bordered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, transitions.map(({\n    item: location,\n    props,\n    key\n  }) => React.createElement(animated.div, {\n    key: key,\n    style: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    location: location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/help/overview\",\n    component: Overview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/help/controls\",\n    component: Controls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/help/creator\",\n    component: Creator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))))))));\n};\n\nconst Overview = () => {\n  return React.createElement(\"div\", {\n    className: \"overview-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"What is Planechase?\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"To play a game of Planechase, each player needs his or her own planar deck, consisting of at least 10 different oversized cards. The players may also use a \\\"shared planar deck,\\\" which requires ten cards per player. Players cannot use more than one plane with any given name. When the game begins, the player going first reveals the top of his or her planar deck (or the shared planar deck), which is the plane the game starts on. Each plane card has a name, a type, one ability that applies at all times (either to all players or to whoever is the turn player at the time), and one \\\"Chaos\\\" ability.\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Chaos\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"To play a game of Planechase, each player needs his or her own planar deck, consisting of at least 10 different oversized cards. The players may also use a \\\"shared planar deck,\\\" which requires ten cards per player. Players cannot use more than one plane with any given name. When the game begins, the player going first reveals the top of his or her planar deck (or the shared planar deck), which is the plane the game starts on. Each plane card has a name, a type, one ability that applies at all times (either to all players or to whoever is the turn player at the time), and one \\\"Chaos\\\" ability.\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Planeswalking\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"To play a game of Planechase, each player needs his or her own planar deck, consisting of at least 10 different oversized cards. The players may also use a \\\"shared planar deck,\\\" which requires ten cards per player. Players cannot use more than one plane with any given name. When the game begins, the player going first reveals the top of his or her planar deck (or the shared planar deck), which is the plane the game starts on. Each plane card has a name, a type, one ability that applies at all times (either to all players or to whoever is the turn player at the time), and one \\\"Chaos\\\" ability.\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Phenomena\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur\"));\n};\n\nconst Controls = () => {\n  return React.createElement(\"div\", {\n    className: \"controls-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Roll Planar Dice\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Switch Views\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Adjust Player Health\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Action\")), React.createElement(\"div\", {\n    className: \"line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"line-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"[ENTER]\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"[SPACE]\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"[Player #] + [- or +]\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"[ENTER]\"))));\n};\n\nconst Creator = () => {\n  return React.createElement(\"div\", {\n    className: \"creator-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"muh name's quinn\");\n};\n\nexport default HelpView;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/components/HelpView.js"],"names":["React","Switch","Route","Link","useLocation","useTransition","animated","config","useSpring","HelpView","location","pathname","transitions","from","opacity","transform","enter","leave","default","animation","map","item","props","key","Overview","Controls","Creator"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport { useTransition, animated, config, useSpring } from \"react-spring\";\n\nconst HelpView = () => {\n  const location = useLocation();\n  const { pathname } = location;\n\n  const transitions = useTransition(location, location => location.pathname, {\n    from: { opacity: 0, transform: \"translate3d(100%,0,0)\" },\n    enter: { opacity: 1, transform: \"translate3d(0%,0,0)\" },\n    leave: { opacity: 0, transform: \"translate3d(-50%,0,0)\" },\n    config: config.default\n  });\n\n  const animation = useSpring({from:{opacity: 0}, opacity: 1, config: config.default})\n\n  return (\n    <animated.div style={animation} className=\"help-panel-container\">\n      <div className=\"help-panel\">\n        <h1>Help</h1>\n        <div className=\"switch\">\n          <Link to=\"/help/overview\">\n            <h2 className={pathname === \"/help/overview\" ? \"\" : \"faded\"}>\n              Overview\n            </h2>\n          </Link>\n          <Link to=\"/help/controls\">\n            <h2 className={pathname === \"/help/controls\" ? \"\" : \"faded\"}>\n              Controls\n            </h2>\n          </Link>\n          <Link to=\"/help/creator\">\n            <h2 className={pathname === \"/help/creator\" ? \"\" : \"faded\"}>\n              Creator\n            </h2>\n          </Link>\n        </div>\n        <div className=\"bordered\">\n          <div className=\"content\">\n              {transitions.map(({ item: location, props, key }) => (\n                <animated.div key={key} style={props}>\n                  <Switch location={location}>\n                    <Route path=\"/help/overview\" component={Overview} />\n                    <Route path=\"/help/controls\" component={Controls} />\n                    <Route path=\"/help/creator\" component={Creator} />\n                  </Switch>\n                </animated.div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </animated.div>\n  );\n};\n\nconst Overview = () => {\n  return (\n    <div className=\"overview-container\">\n      <h2>What is Planechase?</h2>\n      <p>\n        To play a game of Planechase, each player needs his or her own planar\n        deck, consisting of at least 10 different oversized cards. The players\n        may also use a \"shared planar deck,\" which requires ten cards per\n        player. Players cannot use more than one plane with any given name. When\n        the game begins, the player going first reveals the top of his or her\n        planar deck (or the shared planar deck), which is the plane the game\n        starts on. Each plane card has a name, a type, one ability that applies\n        at all times (either to all players or to whoever is the turn player at\n        the time), and one \"Chaos\" ability.\n      </p>\n      <h2>Chaos</h2>\n      <p>\n        To play a game of Planechase, each player needs his or her own planar\n        deck, consisting of at least 10 different oversized cards. The players\n        may also use a \"shared planar deck,\" which requires ten cards per\n        player. Players cannot use more than one plane with any given name. When\n        the game begins, the player going first reveals the top of his or her\n        planar deck (or the shared planar deck), which is the plane the game\n        starts on. Each plane card has a name, a type, one ability that applies\n        at all times (either to all players or to whoever is the turn player at\n        the time), and one \"Chaos\" ability.\n      </p>\n      <h2>Planeswalking</h2>\n      <p>\n        To play a game of Planechase, each player needs his or her own planar\n        deck, consisting of at least 10 different oversized cards. The players\n        may also use a \"shared planar deck,\" which requires ten cards per\n        player. Players cannot use more than one plane with any given name. When\n        the game begins, the player going first reveals the top of his or her\n        planar deck (or the shared planar deck), which is the plane the game\n        starts on. Each plane card has a name, a type, one ability that applies\n        at all times (either to all players or to whoever is the turn player at\n        the time), and one \"Chaos\" ability.\n      </p>\n      <h2>Phenomena</h2>\n      <p>\n      Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur\n      </p>\n    </div>\n  );\n};\n\nconst Controls = () => {\n  return (\n    <div className=\"controls-container\">\n      <div className='centered'>\n      <div className=\"left\">\n        <h2>Roll Planar Dice</h2>\n        <h2>Switch Views</h2>\n        <h2>Adjust Player Health</h2>\n        <h2>Action</h2>\n      </div>\n      <div className=\"line\">\n        <div className=\"line-inner\"></div>\n      </div>\n      <div className=\"right\">\n        <h2>[ENTER]</h2>\n        <h2>[SPACE]</h2>\n        <h2>[Player #] + [- or +]</h2>\n        <h2>[ENTER]</h2>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nconst Creator = () => {\n  return <div className=\"creator-container\">muh name's quinn</div>;\n};\n\nexport default HelpView;\n"]},"metadata":{},"sourceType":"module"}