{"ast":null,"code":"import _slicedToArray from \"/Users/quinnjones/Desktop/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\n\nconst useKeyPress = callback => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        keyPressed = _useState2[0],\n        setKeyPressed = _useState2[1];\n\n  useEffect(() => {\n    const downHandler = e => {\n      console.log(e);\n\n      if (keyPressed !== e.key && e.key.length === 1) {\n        setKeyPressed(e.key);\n        callback && callback(e.key);\n      }\n    };\n\n    const upHandler = () => {\n      setKeyPressed(null);\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  });\n  return keyPressed;\n};\n\nexport default useKeyPress;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/hooks/useKeyPress.js"],"names":["useState","useEffect","useKeyPress","callback","keyPressed","setKeyPressed","downHandler","e","console","log","key","length","upHandler","window","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AAAA,oBAEMH,QAAQ,EAFd;AAAA;AAAA,QAEvBI,UAFuB;AAAA,QAEXC,aAFW;;AAI9BJ,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMK,WAAW,GAAIC,CAAD,IAAO;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,UAAIH,UAAU,KAAKG,CAAC,CAACG,GAAjB,IAAwBH,CAAC,CAACG,GAAF,CAAMC,MAAN,KAAiB,CAA7C,EAAgD;AAC9CN,QAAAA,aAAa,CAACE,CAAC,CAACG,GAAH,CAAb;AACAP,QAAAA,QAAQ,IAAIA,QAAQ,CAACI,CAAC,CAACG,GAAH,CAApB;AACD;AACF,KAND;;AAQA,UAAME,SAAS,GAAG,MAAM;AACtBP,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD;;AAIAQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCR,WAAnC;AACAO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,SAAjC;AAEA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCT,WAAtC;AACAO,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,SAApC;AACD,KAHD;AAID,GArBQ,CAAT;AAuBA,SAAOR,UAAP;AACD,CA5BD;;AA8BA,eAAeF,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useKeyPress = callback => {\n\n  const [keyPressed, setKeyPressed] = useState();\n\n  useEffect(() => {\n\n    const downHandler = (e) => {\n      console.log(e)\n      if (keyPressed !== e.key && e.key.length === 1) {\n        setKeyPressed(e.key);\n        callback && callback(e.key);\n      }\n    };\n\n    const upHandler = () => {\n      setKeyPressed(null);\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  });\n\n  return keyPressed;\n};\n\nexport default useKeyPress;"]},"metadata":{},"sourceType":"module"}