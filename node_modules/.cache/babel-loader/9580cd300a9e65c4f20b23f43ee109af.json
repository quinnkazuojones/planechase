{"ast":null,"code":"import _slicedToArray from\"/Users/quinnjones/Desktop/planechase/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/Users/quinnjones/Desktop/planechase/planechase/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{createContext,useState,useEffect}from\"react\";import{data}from\"./assets/cards\";import{shuffle,make2dArray}from\"./utils\";import constants from'./constants';import{useHistory,useLocation}from'react-router-dom';export var Context=createContext();var cards=shuffle(data);export var checkGrid=function checkGrid(grid){var newGrid=_toConsumableArray(grid);grid.forEach(function(row,i){row.forEach(function(card,_i){if(i===0&&_i===1||i===1&&_i===0||i===1&&_i===1||i===1&&_i===2||i===2&&_i===1){if(!newGrid[i][_i]){newGrid[i][_i]=getCard();}}});});return newGrid;};var getCard=function getCard(){var card=cards[0];cards=cards.slice(1,cards.length);return card;};var ContextProvider=function ContextProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),players=_useState2[0],setPlayers=_useState2[1];var _useState3=useState(make2dArray()),_useState4=_slicedToArray(_useState3,2),grid=_useState4[0],setGrid=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),current=_useState6[0],setCurrent=_useState6[1];var _useState7=useState(constants.SETTING_UP),_useState8=_slicedToArray(_useState7,2),status=_useState8[0],setStatus=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),started=_useState10[0],setStarted=_useState10[1];var history=useHistory();var _useLocation=useLocation(),pathname=_useLocation.pathname;useEffect(function(){if(history){if(pathname!=='/'&&!pathname.includes('/help')&&!started)history.push('/');}},[pathname]);useEffect(function(){setGrid(checkGrid(grid));},[]);useEffect(function(){if(grid)setCurrent(grid[1][1]);},[grid]);return React.createElement(Context.Provider,{value:{started:started,setStarted:setStarted,players:players,setPlayers:setPlayers,grid:grid,setGrid:setGrid,current:current,status:status,setStatus:setStatus}},children);};export default ContextProvider;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/planechase/src/Context.js"],"names":["React","createContext","useState","useEffect","data","shuffle","make2dArray","constants","useHistory","useLocation","Context","cards","checkGrid","grid","newGrid","forEach","row","i","card","_i","getCard","slice","length","ContextProvider","children","players","setPlayers","setGrid","current","setCurrent","SETTING_UP","status","setStatus","started","setStarted","history","pathname","includes","push"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { data } from \"./assets/cards\";\nimport { shuffle, make2dArray } from \"./utils\";\nimport constants from './constants';\nimport {useHistory, useLocation} from 'react-router-dom';\n\nexport const Context = createContext();\n\nlet cards = shuffle(data);\n\nexport const checkGrid = grid => {\n  let newGrid = [...grid];\n\n  grid.forEach((row, i) => {\n    row.forEach((card, _i) => {\n      if (\n        (i === 0 && _i === 1) ||\n        (i === 1 && _i === 0) ||\n        (i === 1 && _i === 1) ||\n        (i === 1 && _i === 2) ||\n        (i === 2 && _i === 1)\n      ) {\n        if (!newGrid[i][_i]) {\n          newGrid[i][_i] = getCard();\n        }\n      }\n    });\n  });\n  return newGrid;\n};\n\nconst getCard = () => {\n  const card = cards[0];\n  cards = cards.slice(1, cards.length);\n  return card;\n};\n\nconst ContextProvider = ({ children }) => {\n  const [players, setPlayers] = useState([]);\n  const [grid, setGrid] = useState(make2dArray());\n  const [current, setCurrent] = useState();\n  const [status, setStatus] = useState(constants.SETTING_UP);\n  const [started, setStarted] = useState(false);\n\n  const history = useHistory();\n  const {pathname} = useLocation();\n  useEffect(() => {\n    if(history){\n      if((pathname !== '/' && !pathname.includes('/help'))  && !started) history.push('/');\n    }\n  }, [pathname]);\n\n  useEffect(() => {\n    setGrid(checkGrid(grid));\n  }, []);\n\n  useEffect(() => {\n    if (grid) setCurrent(grid[1][1]);\n  }, [grid]);\n\n  return (\n    <Context.Provider\n      value={{\n        started,\n        setStarted,\n        players,\n        setPlayers,\n        grid,\n        setGrid,\n        current,\n        status,\n        setStatus\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport default ContextProvider;\n"]},"metadata":{},"sourceType":"module"}