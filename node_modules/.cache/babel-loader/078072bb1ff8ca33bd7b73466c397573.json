{"ast":null,"code":"import _slicedToArray from \"/Users/quinnjones/Desktop/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\n\nconst useMultiKeyPress = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        keysPressed = _useState2[0],\n        setKeyPressed = _useState2[1];\n\n  const downHandler = ({\n    code\n  }) => {\n    if (!keysPressed.some(code => code === code)) {\n      const keys = [...keysPressed, code];\n      setKeyPressed(keys);\n    }\n  };\n\n  const upHandler = ({\n    code\n  }) => {\n    const keys = keysPressed.filter(code => code !== code);\n    setKeyPressed(keys);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []);\n  return keysPressed;\n};\n\nexport default useMultiKeyPress;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/hooks/useMultiKeyPress.js"],"names":["useState","useEffect","useMultiKeyPress","keysPressed","setKeyPressed","downHandler","code","some","keys","upHandler","filter","window","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA,oBACQF,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACtBG,WADsB;AAAA,QACTC,aADS;;AAG7B,QAAMC,WAAW,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAChC,QAAG,CAACH,WAAW,CAACI,IAAZ,CAAiBD,IAAI,IAAIA,IAAI,KAAKA,IAAlC,CAAJ,EAA4C;AAC1C,YAAME,IAAI,GAAG,CAAC,GAAGL,WAAJ,EAAiBG,IAAjB,CAAb;AACAF,MAAAA,aAAa,CAACI,IAAD,CAAb;AACD;AACF,GALD;;AAOA,QAAMC,SAAS,GAAG,CAAC;AAAEH,IAAAA;AAAF,GAAD,KAAc;AAC9B,UAAME,IAAI,GAAGL,WAAW,CAACO,MAAZ,CAAmBJ,IAAI,IAAIA,IAAI,KAAKA,IAApC,CAAb;AACAF,IAAAA,aAAa,CAACI,IAAD,CAAb;AACD,GAHD;;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCP,WAAnC;AACAM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCH,SAAjC;AACA,WAAO,MAAM;AACXE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCR,WAAtC;AACAM,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCJ,SAApC;AACD,KAHD;AAID,GAPQ,EAON,EAPM,CAAT;AASA,SAAON,WAAP;AACD,CAzBD;;AA2BA,eAAeD,gBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useMultiKeyPress = () => {\n  const [keysPressed, setKeyPressed] = useState([]);\n\n  const downHandler = ({ code }) => {\n    if(!keysPressed.some(code => code === code)){\n      const keys = [...keysPressed, code];\n      setKeyPressed(keys);\n    }\n  }\n\n  const upHandler = ({ code }) => {\n    const keys = keysPressed.filter(code => code !== code);\n    setKeyPressed(keys);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []); \n\n  return keysPressed;\n}\n\nexport default useMultiKeyPress;"]},"metadata":{},"sourceType":"module"}