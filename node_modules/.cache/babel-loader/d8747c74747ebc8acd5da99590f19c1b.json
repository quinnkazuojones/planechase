{"ast":null,"code":"import _slicedToArray from\"/Users/quinnjones/Desktop/planechase/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from\"react\";import{Context}from\"../Context\";import dice from\"../assets/icons/dice.svg\";import noresult from\"../assets/icons/null.svg\";import chaos from\"../assets/icons/chaos.svg\";import pw from\"../assets/icons/pw.svg\";import useKeyPress from'../hooks/useKeyPress';import constants from'../constants';var DicePanel=function DicePanel(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),view=_useState2[0],setView=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),result=_useState4[0],setResult=_useState4[1];var _useContext=useContext(Context),status=_useContext.status,setStatus=_useContext.setStatus;useKeyPress(function(key){if(key==='Enter'){roll();}});var roll=function roll(){if(status===constants.SETTING_UP)return;var count=0;var num=1;var shuffle=setInterval(function(){setView(num===1?chaos:num===2?pw:noresult);count++;num++;if(num===4)num=1;if(count===12){clearInterval(shuffle);var random=Math.floor(Math.random()*Math.floor(6))+1;setView(random===1?chaos:random===2?pw:noresult);setResult(random===1?chaos:random===2?pw:noresult);}},70);};useEffect(function(){if(result===pw)setStatus(constants.PLANESWALKING);if(result===chaos)setStatus(constants.CHAOS);},[result]);return React.createElement(\"div\",{className:'dice-panel '+(status===constants.SETTING_UP?'disabled':'')},React.createElement(\"div\",{onClick:roll,className:\"dice-container\"},React.createElement(\"img\",{src:dice,alt:\"\"})),React.createElement(\"div\",{className:\"results-container\"},React.createElement(\"img\",{style:{width:view===chaos?'60px':view===pw?'40px':'50px'},src:view,alt:\"\"})));};export default DicePanel;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/planechase/src/components/DicePanel.js"],"names":["React","useState","useEffect","useContext","Context","useKeyPress","constants","DicePanel","view","setView","result","setResult","status","setStatus","key","roll","SETTING_UP","count","num","shuffle","setInterval","chaos","pw","noresult","clearInterval","random","Math","floor","PLANESWALKING","CHAOS","dice","width"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,OAAT,KAAwB,YAAxB,C,8KAKA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,eACEN,QAAQ,EADV,wCACfO,IADe,eACTC,OADS,8BAEMR,QAAQ,EAFd,yCAEfS,MAFe,eAEPC,SAFO,+BAGMR,UAAU,CAACC,OAAD,CAHhB,CAGfQ,MAHe,aAGfA,MAHe,CAGPC,SAHO,aAGPA,SAHO,CAKtBR,WAAW,CAAC,SAAAS,GAAG,CAAI,CACjB,GAAGA,GAAG,GAAK,OAAX,CAAmB,CACjBC,IAAI,GACL,CACF,CAJU,CAAX,CAMA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,GAAGH,MAAM,GAAGN,SAAS,CAACU,UAAtB,CAAkC,OAClC,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAIC,CAAAA,GAAG,CAAG,CAAV,CAEA,GAAMC,CAAAA,OAAO,CAAGC,WAAW,CAAC,UAAM,CAChCX,OAAO,CAACS,GAAG,GAAK,CAAR,CAAYG,KAAZ,CAAoBH,GAAG,GAAK,CAAR,CAAYI,EAAZ,CAAiBC,QAAtC,CAAP,CACAN,KAAK,GACLC,GAAG,GACH,GAAGA,GAAG,GAAK,CAAX,CAAcA,GAAG,CAAG,CAAN,CACd,GAAGD,KAAK,GAAK,EAAb,CAAgB,CACZO,aAAa,CAACL,OAAD,CAAb,CACA,GAAMM,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,GAAgBC,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B,EAA4C,CAA3D,CACAlB,OAAO,CAACgB,MAAM,GAAK,CAAX,CAAeJ,KAAf,CAAuBI,MAAM,GAAK,CAAX,CAAeH,EAAf,CAAoBC,QAA5C,CAAP,CACAZ,SAAS,CAACc,MAAM,GAAK,CAAX,CAAeJ,KAAf,CAAuBI,MAAM,GAAK,CAAX,CAAeH,EAAf,CAAoBC,QAA5C,CAAT,CACD,CACJ,CAX0B,CAWxB,EAXwB,CAA3B,CAYD,CAjBD,CAmBArB,SAAS,CAAC,UAAM,CACd,GAAGQ,MAAM,GAAKY,EAAd,CAAkBT,SAAS,CAACP,SAAS,CAACsB,aAAX,CAAT,CAClB,GAAGlB,MAAM,GAAKW,KAAd,CAAqBR,SAAS,CAACP,SAAS,CAACuB,KAAX,CAAT,CACtB,CAHQ,CAGN,CAACnB,MAAD,CAHM,CAAT,CAKA,MACE,4BAAK,SAAS,CAAE,eAAiBE,MAAM,GAAGN,SAAS,CAACU,UAAnB,CAAgC,UAAhC,CAA6C,EAA9D,CAAhB,EACE,2BAAK,OAAO,CAAED,IAAd,CAAoB,SAAS,CAAC,gBAA9B,EACE,2BAAK,GAAG,CAAEe,IAAV,CAAgB,GAAG,CAAC,EAApB,EADF,CADF,CAIE,2BAAK,SAAS,CAAC,mBAAf,EACE,2BAAK,KAAK,CAAE,CAACC,KAAK,CAAEvB,IAAI,GAAKa,KAAT,CAAiB,MAAjB,CAA0Bb,IAAI,GAAKc,EAAT,CAAc,MAAd,CAAuB,MAAzD,CAAZ,CAA8E,GAAG,CAAEd,IAAnF,CAAyF,GAAG,CAAC,EAA7F,EADF,CAJF,CADF,CAUD,CA7CD,CA+CA,cAAeD,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport dice from \"../assets/icons/dice.svg\";\nimport noresult from \"../assets/icons/null.svg\";\nimport chaos from \"../assets/icons/chaos.svg\";\nimport pw from \"../assets/icons/pw.svg\";\nimport useKeyPress from '../hooks/useKeyPress';\nimport constants from '../constants';\n\nconst DicePanel = () => {\n  const [view, setView] = useState();\n  const [result, setResult] = useState();\n  const {status, setStatus} = useContext(Context);\n\n  useKeyPress(key => {\n    if(key === 'Enter'){\n      roll();\n    }\n  })\n\n  const roll = () => {\n    if(status===constants.SETTING_UP) return;\n    let count = 0;\n    let num = 1;\n\n    const shuffle = setInterval(() => {\n      setView(num === 1 ? chaos : num === 2 ? pw : noresult);\n      count++;\n      num++;\n      if(num === 4) num = 1;\n      if(count === 12){ \n          clearInterval(shuffle);\n          const random = Math.floor(Math.random() * Math.floor(6)) + 1;\n          setView(random === 1 ? chaos : random === 2 ? pw : noresult);\n          setResult(random === 1 ? chaos : random === 2 ? pw : noresult);\n        }\n    }, 70);\n  };\n\n  useEffect(() => {\n    if(result === pw) setStatus(constants.PLANESWALKING);\n    if(result === chaos) setStatus(constants.CHAOS);\n  }, [result])\n\n  return (\n    <div className={'dice-panel ' + (status===constants.SETTING_UP ? 'disabled' : '')}>\n      <div onClick={roll} className=\"dice-container\">\n        <img src={dice} alt=\"\" />\n      </div>\n      <div className=\"results-container\">\n        <img style={{width: view === chaos ? '60px' : view === pw ? '40px' : '50px'}} src={view} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DicePanel;\n"]},"metadata":{},"sourceType":"module"}