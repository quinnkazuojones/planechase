{"ast":null,"code":"import _slicedToArray from \"/Users/quinnjones/Desktop/planechase/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\n\nconst useKeyPress = callback => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        keyPressed = _useState2[0],\n        setKeyPressed = _useState2[1];\n\n  useEffect(() => {\n    const downHandler = ({\n      code\n    }) => {\n      if (keyPressed !== code) {\n        setKeyPressed(code);\n        callback && callback(code);\n      }\n    };\n\n    const upHandler = () => {\n      setKeyPressed(null);\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n  return keyPressed;\n};\n\nexport default useKeyPress;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/planechase/src/hooks/useKeyPress.js"],"names":["useState","useEffect","useKeyPress","callback","keyPressed","setKeyPressed","downHandler","code","upHandler","window","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AAAA,oBACMH,QAAQ,EADd;AAAA;AAAA,QACvBI,UADuB;AAAA,QACXC,aADW;;AAG9BJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,WAAW,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAChC,UAAIH,UAAU,KAAKG,IAAnB,EAAyB;AACvBF,QAAAA,aAAa,CAACE,IAAD,CAAb;AACAJ,QAAAA,QAAQ,IAAIA,QAAQ,CAACI,IAAD,CAApB;AACD;AACF,KALD;;AAOA,UAAMC,SAAS,GAAG,MAAM;AACtBH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD;;AAIAI,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,WAAnC;AACAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,SAAjC;AAEA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCL,WAAtC;AACAG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,SAApC;AACD,KAHD;AAID,GAnBQ,CAAT;AAqBA,SAAOJ,UAAP;AACD,CAzBD;;AA2BA,eAAeF,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useKeyPress = callback => {\n  const [keyPressed, setKeyPressed] = useState();\n\n  useEffect(() => {\n    const downHandler = ({ code }) => {\n      if (keyPressed !== code) {\n        setKeyPressed(code);\n        callback && callback(code);\n      }\n    };\n\n    const upHandler = () => {\n      setKeyPressed(null);\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n\n  return keyPressed;\n};\n\nexport default useKeyPress;\n"]},"metadata":{},"sourceType":"module"}