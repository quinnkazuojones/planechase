{"ast":null,"code":"import _slicedToArray from\"/Users/quinnjones/Desktop/planechase/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect}from\"react\";import{Context}from\"../Context\";import Player from\"./Player\";import useMeasure from\"../hooks/useMeasure\";import{animated,useSpring,config,useTransition}from\"react-spring\";var PlayerPanel=function PlayerPanel(){var _useContext=useContext(Context),players=_useContext.players,setPlayers=_useContext.setPlayers,status=_useContext.status;var _useMeasure=useMeasure(),_useMeasure2=_slicedToArray(_useMeasure,2),bind=_useMeasure2[0],height=_useMeasure2[1].height;var animation=useSpring({height:height+100,config:config.default});var transition=useTransition(players,function(player,i){return i;},{from:{opacity:0},enter:{opacity:1},levae:{opacity:0}});var mappedPlayers=players?transition.map(function(_ref){var props=_ref.props,key=_ref.key,item=_ref.item;return React.createElement(Player,{status:status,styleProp:props,key:key,players:players,setPlayers:setPlayers,health:item.health,name:item.name,num:key});}):null;return React.createElement(animated.div,{style:animation,className:\"player-panel\"},React.createElement(\"div\",{className:\"header\"},React.createElement(\"h1\",null,\"Players\")),React.createElement(\"div\",Object.assign({},bind,{className:\"player-container\"}),players.length>0?mappedPlayers:React.createElement(\"p\",{className:\"no-players\"},\"Add players...\")));};export default PlayerPanel;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/planechase/src/components/PlayerPanel.js"],"names":["React","useContext","useEffect","Context","Player","useMeasure","animated","useSpring","config","useTransition","PlayerPanel","players","setPlayers","status","bind","height","animation","default","transition","player","i","from","opacity","enter","levae","mappedPlayers","map","props","key","item","health","name","length"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,OAASC,OAAT,KAAwB,YAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,MAA9B,CAAsCC,aAAtC,KAA2D,cAA3D,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,iBACgBT,UAAU,CAACE,OAAD,CAD1B,CAChBQ,OADgB,aAChBA,OADgB,CACPC,UADO,aACPA,UADO,CACKC,MADL,aACKA,MADL,iBAEGR,UAAU,EAFb,4CAEjBS,IAFiB,iBAETC,MAFS,iBAETA,MAFS,CAKxB,GAAMC,CAAAA,SAAS,CAAGT,SAAS,CAAC,CAAEQ,MAAM,CAAEA,MAAM,CAAG,GAAnB,CAAwBP,MAAM,CAAEA,MAAM,CAACS,OAAvC,CAAD,CAA3B,CACA,GAAMC,CAAAA,UAAU,CAAGT,aAAa,CAACE,OAAD,CAAU,SAACQ,MAAD,CAASC,CAAT,QAAeA,CAAAA,CAAf,EAAV,CAA4B,CAC1DC,IAAI,CAAE,CAAEC,OAAO,CAAE,CAAX,CADoD,CAE1DC,KAAK,CAAE,CAAED,OAAO,CAAE,CAAX,CAFmD,CAG1DE,KAAK,CAAE,CAAEF,OAAO,CAAE,CAAX,CAHmD,CAA5B,CAAhC,CAMA,GAAMG,CAAAA,aAAa,CAAGd,OAAO,CACzBO,UAAU,CAACQ,GAAX,CAAe,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,GAAV,MAAUA,GAAV,CAAeC,IAAf,MAAeA,IAAf,OACb,qBAAC,MAAD,EACE,MAAM,CAAEhB,MADV,CAEE,SAAS,CAAEc,KAFb,CAGE,GAAG,CAAEC,GAHP,CAIE,OAAO,CAAEjB,OAJX,CAKE,UAAU,CAAEC,UALd,CAME,MAAM,CAAEiB,IAAI,CAACC,MANf,CAOE,IAAI,CAAED,IAAI,CAACE,IAPb,CAQE,GAAG,CAAIH,GART,EADa,EAAf,CADyB,CAazB,IAbJ,CAeA,MACE,qBAAC,QAAD,CAAU,GAAV,EAAc,KAAK,CAAEZ,SAArB,CAAgC,SAAS,CAAC,cAA1C,EACE,2BAAK,SAAS,CAAC,QAAf,EACE,wCADF,CADF,CAIE,2CAASF,IAAT,EAAe,SAAS,CAAC,kBAAzB,GACGH,OAAO,CAACqB,MAAR,CAAiB,CAAjB,CACCP,aADD,CAGC,yBAAG,SAAS,CAAC,YAAb,mBAJJ,CAJF,CADF,CAcD,CAzCD,CA2CA,cAAef,CAAAA,WAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Context } from \"../Context\";\nimport Player from \"./Player\";\nimport useMeasure from \"../hooks/useMeasure\";\nimport { animated, useSpring, config, useTransition } from \"react-spring\";\n\nconst PlayerPanel = () => {\n  const { players, setPlayers, status } = useContext(Context);\n  const [bind, { height }] = useMeasure();\n\n\n  const animation = useSpring({ height: height + 100, config: config.default });\n  const transition = useTransition(players, (player, i) => i, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    levae: { opacity: 0 }\n  });\n\n  const mappedPlayers = players\n    ? transition.map(({ props, key, item }) => (\n        <Player\n          status={status}\n          styleProp={props}\n          key={key}\n          players={players}\n          setPlayers={setPlayers}\n          health={item.health}\n          name={item.name}\n          num = {key}\n        />\n      ))\n    : null;\n\n  return (\n    <animated.div style={animation} className=\"player-panel\">\n      <div className=\"header\">\n        <h1>Players</h1>\n      </div>\n      <div {...bind} className=\"player-container\">\n        {players.length > 0 ? (\n          mappedPlayers\n        ) : (\n          <p className=\"no-players\">Add players...</p>\n        )}\n      </div>\n    </animated.div>\n  );\n};\n\nexport default PlayerPanel;\n"]},"metadata":{},"sourceType":"module"}