{"ast":null,"code":"var _jsxFileName = \"/Users/quinnjones/Desktop/planechase/src/components/GridView.js\";\nimport React, { useContext } from 'react';\nimport { Context } from '../Context';\nimport GridCard from './GridCard';\n\nconst GridView = () => {\n  const _useContext = useContext(Context),\n        grid = _useContext.grid,\n        setGrid = _useContext.setGrid;\n\n  const planeswalk = (i, _i) => {\n    let newGrid = [[null, null, null], [null, null, null], [null, null, null]];\n    let y = 1 - i;\n    let x = 1 - _i;\n    grid.forEach((row, i) => {\n      row.forEach((card, _i) => {\n        if (card) newGrid[i + y][_i + x] = card;\n      });\n    });\n    console.log(newGrid);\n  };\n\n  const mappedCards = grid ? grid.map((row, i) => row.map((card, _i) => React.createElement(GridCard, {\n    planeswalk: planeswalk,\n    i: i,\n    _i: _i,\n    card: card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))) : null;\n  return React.createElement(\"div\", {\n    className: \"grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, mappedCards);\n};\n\nexport default GridView;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/src/components/GridView.js"],"names":["React","useContext","Context","GridCard","GridView","grid","setGrid","planeswalk","i","_i","newGrid","y","x","forEach","row","card","console","log","mappedCards","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,sBACKH,UAAU,CAACC,OAAD,CADf;AAAA,QACZG,IADY,eACZA,IADY;AAAA,QACNC,OADM,eACNA,OADM;;AAGnB,QAAMC,UAAU,GAAG,CAACC,CAAD,EAAIC,EAAJ,KAAW;AAC1B,QAAIC,OAAO,GAAG,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,EAAqB,CAAC,IAAD,EAAO,IAAP,EAAY,IAAZ,CAArB,EAAwC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAxC,CAAd;AACA,QAAIC,CAAC,GAAG,IAAIH,CAAZ;AACA,QAAII,CAAC,GAAG,IAAIH,EAAZ;AACAJ,IAAAA,IAAI,CAACQ,OAAL,CAAa,CAACC,GAAD,EAAMN,CAAN,KAAY;AACrBM,MAAAA,GAAG,CAACD,OAAJ,CAAY,CAACE,IAAD,EAAON,EAAP,KAAc;AACtB,YAAGM,IAAH,EAASL,OAAO,CAACF,CAAC,GAAGG,CAAL,CAAP,CAAeF,EAAE,GAAGG,CAApB,IAAyBG,IAAzB;AACZ,OAFD;AAGH,KAJD;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACH,GAVD;;AAYA,QAAMQ,WAAW,GAAGb,IAAI,GAAGA,IAAI,CAACc,GAAL,CAAS,CAACL,GAAD,EAAMN,CAAN,KAAYM,GAAG,CAACK,GAAJ,CAAQ,CAACJ,IAAD,EAAON,EAAP,KAAc,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEF,UAAtB;AAAkC,IAAA,CAAC,EAAEC,CAArC;AAAwC,IAAA,EAAE,EAAEC,EAA5C;AAAgD,IAAA,IAAI,EAAEM,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CAArB,CAAH,GAAiH,IAAzI;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,WADL,CADJ;AAKH,CAtBD;;AAwBA,eAAed,QAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {Context} from '../Context';\nimport GridCard from './GridCard';\n\nconst GridView = () => {\n    const {grid, setGrid} = useContext(Context);\n\n    const planeswalk = (i, _i) => {\n        let newGrid = [[null, null, null], [null, null,null], [null,null,null]];\n        let y = 1 - i;\n        let x = 1 - _i;\n        grid.forEach((row, i) => {\n            row.forEach((card, _i) => {\n                if(card) newGrid[i + y][_i + x] = card;\n            })\n        })\n        console.log(newGrid);\n    }\n\n    const mappedCards = grid ? grid.map((row, i) => row.map((card, _i) => <GridCard planeswalk={planeswalk} i={i} _i={_i} card={card} />)) : null;\n\n    return ( \n        <div className='grid-container'>\n            {mappedCards}\n        </div>\n     );\n}\n \nexport default GridView;"]},"metadata":{},"sourceType":"module"}