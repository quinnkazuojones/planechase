{"ast":null,"code":"import _toConsumableArray from\"/Users/quinnjones/Desktop/planechase/planechase/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/quinnjones/Desktop/planechase/planechase/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from\"react\";import{Context}from\"../Context\";import logo from\"../assets/icons/logo.svg\";import{animated,useSpring,config}from'react-spring';import{useHistory}from'react-router-dom';var InitView=function InitView(){var history=useHistory();var _useContext=useContext(Context),players=_useContext.players,setPlayers=_useContext.setPlayers,setStatus=_useContext.setStatus,started=_useContext.started,setStarted=_useContext.setStarted;var _useState=useState(),_useState2=_slicedToArray(_useState,2),player=_useState2[0],setPlayer=_useState2[1];if(started)history.push('/info');var addPlayer=function addPlayer(e){e.preventDefault();if(player!==''&&!players.some(function(_ref){var name=_ref.name;return name===player;})){setPlayers([].concat(_toConsumableArray(players),[{name:player,health:20}]));}else alert('Empty/Duplicate name not allowed');setPlayer(\"\");};var startGame=function startGame(){if(players.length>0){setStatus(null);setStarted(true);}else alert('need players');};var animation=useSpring({from:{opacity:0},opacity:1,config:config.molasses});return React.createElement(animated.div,{style:animation,className:\"init-view\"},React.createElement(\"img\",{src:logo,alt:\"\"}),React.createElement(\"form\",{onSubmit:addPlayer},React.createElement(\"input\",{value:player,onChange:function onChange(e){return setPlayer(e.target.value);},type:\"text\",placeholder:\"Add player...\",onFocus:function onFocus(e){return e.target.placeholder='';},onBlur:function onBlur(e){return e.target.placeholder='Add player...';}}),React.createElement(\"button\",{type:\"button\",onClick:startGame},\"Start Game\")));};export default InitView;","map":{"version":3,"sources":["/Users/quinnjones/Desktop/planechase/planechase/src/components/InitView.js"],"names":["React","useContext","useState","useEffect","Context","animated","useSpring","config","useHistory","InitView","history","players","setPlayers","setStatus","started","setStarted","player","setPlayer","push","addPlayer","e","preventDefault","some","name","health","alert","startGame","length","animation","from","opacity","molasses","logo","target","value","placeholder"],"mappings":"4QAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,OAAT,KAAwB,YAAxB,C,2CAEA,OAAQC,QAAR,CAAkBC,SAAlB,CAA6BC,MAA7B,KAA0C,cAA1C,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,OAAO,CAAGF,UAAU,EAA1B,CADqB,gBAE2CP,UAAU,CAACG,OAAD,CAFrD,CAEbO,OAFa,aAEbA,OAFa,CAEJC,UAFI,aAEJA,UAFI,CAEQC,SAFR,aAEQA,SAFR,CAEmBC,OAFnB,aAEmBA,OAFnB,CAE4BC,UAF5B,aAE4BA,UAF5B,eAGOb,QAAQ,EAHf,wCAGdc,MAHc,eAGNC,SAHM,eAIrB,GAAGH,OAAH,CAAYJ,OAAO,CAACQ,IAAR,CAAa,OAAb,EAEZ,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,CAAC,CAAI,CACrBA,CAAC,CAACC,cAAF,GACA,GAAGL,MAAM,GAAK,EAAX,EAAiB,CAACL,OAAO,CAACW,IAAR,CAAa,kBAAEC,CAAAA,IAAF,MAAEA,IAAF,OAAYA,CAAAA,IAAI,GAAKP,MAArB,EAAb,CAArB,CAAgE,CAC9DJ,UAAU,8BAAKD,OAAL,GAAc,CAAEY,IAAI,CAAEP,MAAR,CAAgBQ,MAAM,CAAE,EAAxB,CAAd,GAAV,CACD,CAFD,IAGKC,CAAAA,KAAK,CAAC,kCAAD,CAAL,CACLR,SAAS,CAAC,EAAD,CAAT,CACD,CAPD,CASA,GAAMS,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAGf,OAAO,CAACgB,MAAR,CAAkB,CAArB,CAAwB,CACtBd,SAAS,CAAC,IAAD,CAAT,CACAE,UAAU,CAAC,IAAD,CAAV,CACD,CAHD,IAIKU,CAAAA,KAAK,CAAC,cAAD,CAAL,CACN,CAND,CAQA,GAAMG,CAAAA,SAAS,CAAGtB,SAAS,CAAC,CAACuB,IAAI,CAAC,CAACC,OAAO,CAAE,CAAV,CAAN,CAAoBA,OAAO,CAAE,CAA7B,CAAgCvB,MAAM,CAAEA,MAAM,CAACwB,QAA/C,CAAD,CAA3B,CAEA,MACE,qBAAC,QAAD,CAAU,GAAV,EAAc,KAAK,CAAEH,SAArB,CAAgC,SAAS,CAAC,WAA1C,EACE,2BAAK,GAAG,CAAEI,IAAV,CAAgB,GAAG,CAAC,EAApB,EADF,CAEE,4BAAM,QAAQ,CAAEb,SAAhB,EACE,6BACE,KAAK,CAAEH,MADT,CAEE,QAAQ,CAAE,kBAAAI,CAAC,QAAIH,CAAAA,SAAS,CAACG,CAAC,CAACa,MAAF,CAASC,KAAV,CAAb,EAFb,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,eAJd,CAKE,OAAO,CAAE,iBAAAd,CAAC,QAAIA,CAAAA,CAAC,CAACa,MAAF,CAASE,WAAT,CAAuB,EAA3B,EALZ,CAME,MAAM,CAAE,gBAAAf,CAAC,QAAIA,CAAAA,CAAC,CAACa,MAAF,CAASE,WAAT,CAAuB,eAA3B,EANX,EADF,CASE,8BAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAET,SAA/B,eATF,CAFF,CADF,CAkBD,CA3CD,CA6CA,cAAejB,CAAAA,QAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { Context } from \"../Context\";\nimport logo from \"../assets/icons/logo.svg\";\nimport {animated, useSpring, config} from 'react-spring';\nimport {useHistory} from 'react-router-dom';\n\nconst InitView = () => {\n  const history = useHistory();\n  const { players, setPlayers, setStatus, started, setStarted } = useContext(Context);\n  const [player, setPlayer] = useState();\n  if(started) history.push('/info')\n\n  const addPlayer = e => {\n    e.preventDefault();\n    if(player !== '' && !players.some(({name}) => name === player)) {\n      setPlayers([...players, { name: player, health: 20 }]);\n    }\n    else alert('Empty/Duplicate name not allowed');\n    setPlayer(\"\");\n  };\n\n  const startGame = () => {\n    if(players.length  > 0) {\n      setStatus(null);\n      setStarted(true);\n    }\n    else alert('need players');\n  };\n  \n  const animation = useSpring({from:{opacity: 0}, opacity: 1, config: config.molasses})\n\n  return (\n    <animated.div style={animation} className=\"init-view\">\n      <img src={logo} alt=\"\" />\n      <form onSubmit={addPlayer}>\n        <input\n          value={player}\n          onChange={e => setPlayer(e.target.value)}\n          type=\"text\"\n          placeholder=\"Add player...\"\n          onFocus={e => e.target.placeholder = ''}\n          onBlur={e => e.target.placeholder = 'Add player...'}\n        />\n        <button type=\"button\" onClick={startGame}>\n          Start Game\n        </button>\n      </form>\n    </animated.div>\n  );\n};\n\nexport default InitView;\n"]},"metadata":{},"sourceType":"module"}